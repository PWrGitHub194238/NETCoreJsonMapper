//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NETCoreJsonMapper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NETCoreJsonMapper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A .NET Core 3.0 project to convert one JSON formatted file to another based on a given source and target classes loaded dynamically..
        /// </summary>
        internal static string CMD_APP_DESC {
            get {
                return ResourceManager.GetString("CMD_APP_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A full path to the directory from which all JSON formatted files will be processed..
        /// </summary>
        internal static string CMD_INPUT_DESC {
            get {
                return ResourceManager.GetString("CMD_INPUT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given input directory: &apos;{0}&apos; does not exists.\n.
        /// </summary>
        internal static string CMD_INPUT_VALIDATE_ERROR_NOT_EXIST {
            get {
                return ResourceManager.GetString("CMD_INPUT_VALIDATE_ERROR_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No input parameter has been defined..
        /// </summary>
        internal static string CMD_INPUT_VALIDATE_NO_INPUT {
            get {
                return ResourceManager.GetString("CMD_INPUT_VALIDATE_NO_INPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A full path to the directory where all outputed JOSN formatted files will be saved..
        /// </summary>
        internal static string CMD_OUTPUT_DESC {
            get {
                return ResourceManager.GetString("CMD_OUTPUT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a given output directory: `{0}&apos;. An error has occurred: &apos;{1}&apos;..
        /// </summary>
        internal static string CMD_OUTPUT_VALIDATE_ERROR_CREATE_DIR {
            get {
                return ResourceManager.GetString("CMD_OUTPUT_VALIDATE_ERROR_CREATE_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No output directory was defined..
        /// </summary>
        internal static string CMD_OUTPUT_VALIDATE_ERROR_NOT_SET {
            get {
                return ResourceManager.GetString("CMD_OUTPUT_VALIDATE_ERROR_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating for a directory existance on path: &apos;{0}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_INPUT_OPTION_PARAM_VALIDATION {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_INPUT_OPTION_PARAM_VALIDATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start validation for input parameters: &apos;{0}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_INPUT_OPTION_VALIDATION {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_INPUT_OPTION_VALIDATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application has been started with the following input: &apos;{0}&apos; and output: &apos;{1}&apos; parameters..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_OPTIONS {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory on a given path: &apos;{0}&apos; does not exists. Attempt to create one..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_OUTPUT_NOT_EXISTS_VALIDATION {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_OUTPUT_NOT_EXISTS_VALIDATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start validation for output parameters: &apos;{0}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_OUTPUT_OPTION_VALIDATION {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_OUTPUT_OPTION_VALIDATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A program could not start because of command line parameters validation error: &apos;{0}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_VALIDATION_SUMMARY {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_VALIDATION_SUMMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A JSON file with a name: &apos;{0}&apos; within a given directory: &apos;{1}&apos; is found and will be processed..
        /// </summary>
        internal static string LOG_VERBOSE_CMD_LINE_YIELD_JSON_SOURCE_FILE_PATH {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_CMD_LINE_YIELD_JSON_SOURCE_FILE_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load a local assembly on the path &apos;{0}&apos; to resolve classes that implements  the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface..
        /// </summary>
        internal static string LOG_VERBOSE_LOAD_LOCAL_ASSEMBLY_FROM_PATH {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_LOAD_LOCAL_ASSEMBLY_FROM_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving fully qualified class names implementing NETCoreJsonMapper.Interfaces.Mappings.IJsonDataSource&lt;{0}&gt; interface from avaliable assemblies..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLIES {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning a assembly of a fully qualified name &apos;{0}&apos; for any type that implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataSource&lt;{0}&gt; interface..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLY {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully qualified class name &apos;{0}&apos; from the &apos;{1}&apos; assembly implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataSource&lt;{0}&gt; interface and will be used to store parsed input data from JSON files..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLY_VALID {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_SOURCE_CLASS_FROM_ASSEMBLY_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving fully qualified class names implementing NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface from avaliable assemblies..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLIES {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning a assembly of a fully qualified name &apos;{0}&apos; for any type that implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLY {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully qualified class name &apos;{0}&apos; from the &apos;{1}&apos; assembly implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface and will be used to parse input data from JSON files..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLY_VALID {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_ASSEMBLY_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving fully qualified class names implementing the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface from avaliable local assemblies. Local assemblies are stored within the same directory as the main NETCoreJsonMapper assembly (they are marked as core assembly dependencies)..
        /// </summary>
        internal static string LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_LOCAL_ASSEMBLIES {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_RESOLVE_JSON_TARGET_CLASS_FROM_LOCAL_ASSEMBLIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Giving a list of JSON files: &apos;{0}&apos;, the application will try to parse each one against the given class type: &apos;{1}&apos; and store results in the given output directory: &apos;{2}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_STARTUP_PARSE_FOR_SOURCE_JSON_CLASS_TYPE {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_STARTUP_PARSE_FOR_SOURCE_JSON_CLASS_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locating types within a local assembly set that implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataSource&lt;&gt; interface and are suitable for a given type: &apos;{0}&apos;. Local assemblies are stored within the same directory as the main NETCoreJsonMapper assembly..
        /// </summary>
        internal static string LOG_VERBOSE_STARTUP_SCAN_FOR_SOURCE_JSON_CLASS_TYPE {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_STARTUP_SCAN_FOR_SOURCE_JSON_CLASS_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locating types within a local assembly set that implements the NETCoreJsonMapper.Interfaces.Mappings.IJsonDataTarget interface. Local assemblies are stored within the same directory as the main NETCoreJsonMapper assembly..
        /// </summary>
        internal static string LOG_VERBOSE_STARTUP_SCAN_FOR_TARGET_JSON_CLASS_TYPE {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_STARTUP_SCAN_FOR_TARGET_JSON_CLASS_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given set of JSON files &apos;{0}&apos; will be parsed agains a given &apos;{1}&apos; class type..
        /// </summary>
        internal static string LOG_VERBOSE_TRY_PARSE_JSON {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_TRY_PARSE_JSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try to parse a JSON data from the file on the path: &apos;{0}&apos; against the given &apos;{1}&apos; class type..
        /// </summary>
        internal static string LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JSON data from the file on the path: &apos;{0}&apos; matches the definition of the class: &apos;{1}&apos; and will be processed..
        /// </summary>
        internal static string LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH_MATCH {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH_MATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JSON data from the file on the path: &apos;{0}&apos; does NOT match the definition of the class: &apos;{1}&apos;..
        /// </summary>
        internal static string LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH_NOT_MATCH {
            get {
                return ResourceManager.GetString("LOG_VERBOSE_TRY_PARSE_JSON_FROM_PATH_NOT_MATCH", resourceCulture);
            }
        }
    }
}
